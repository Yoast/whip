<?xml version="1.0"?>
<ruleset xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	name="Yoast WHIP"
	xsi:noNamespaceSchemaLocation="./vendor/squizlabs/php_codesniffer/phpcs.xsd">

	<description>Yoast WHIP rules for PHP_CodeSniffer</description>

	<!--
	#############################################################################
	COMMAND LINE ARGUMENTS
	https://github.com/squizlabs/PHP_CodeSniffer/wiki/Annotated-ruleset.xml
	#############################################################################
	-->

	<file>.</file>

	<!-- Only check PHP files. -->
	<arg name="extensions" value="php"/>

	<!-- Show progress, show the error codes for each message (source). -->
	<arg value="ps"/>

	<!-- Strip the filepaths down to the relevant bit. -->
	<arg name="basepath" value="./"/>

	<!-- Check up to 8 files simultaneously. -->
	<arg name="parallel" value="8"/>


	<!--
	#############################################################################
	USE THE YoastCS RULESET
	#############################################################################
	-->

	<rule ref="Yoast">
		<!-- Set the minimum supported WP version for all sniff which use it in one go. -->
		<properties>
			<property name="minimum_supported_version" type="3.0"/>
		</properties>

		<!-- Historically, this library has used camelCaps not snakecase for variable and function names. -->
		<exclude name="WordPress.NamingConventions.ValidVariableName"/>
		<exclude name="WordPress.NamingConventions.ValidFunctionName"/>

		<!-- Historically, this library uses camelCaps file names. -->
		<exclude name="Yoast.Files.FileName"/>
	</rule>

	<!-- Check that variable names are in camelCaps. -->
	<rule ref="Squiz.NamingConventions.ValidVariableName">
		<!-- Private properties should, however, *not* start with an underscore. -->
		<exclude name="Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore"/>
	</rule>

	<!-- Check that function and method names are in camelCaps. -->
	<rule ref="Generic.NamingConventions.CamelCapsFunctionName">
		<properties>
			<!-- Allow for two adjacent capital letters for acronyms. -->
			<property name="strict" value="false"/>
		</properties>

		<!-- Exclude WordPress example function. -->
		<exclude-pattern>/src/facades/wordpress\.php$</exclude-pattern>

		<!-- Exclude mocks of WP Core functions which comply with the WP function name rules instead. -->
		<exclude-pattern>/tests/doubles/WpCoreFunctionsMock\.php$</exclude-pattern>
	</rule>


	<!--
	#############################################################################
	SNIFF SPECIFIC CONFIGURATION
	#############################################################################
	-->

	<!-- Verify that everything in the global namespace is prefixed with a plugin specific prefix. -->
	<rule ref="WordPress.NamingConventions.PrefixAllGlobals">
		<properties>
			<!-- Provide the prefixes to look for. -->
			<property name="prefixes" type="array">
				<element value="whip"/>
				<element value="Yoast\WHIP"/>
			</property>
		</properties>

		<!-- Valid usage: For testing purposes, allow non-prefixed globals. -->
		<exclude-pattern>/tests/doubles/WPCoreFunctionsMock\.php$</exclude-pattern>
	</rule>


	<!--
	#############################################################################
	TEMPORARY ADJUSTMENTS
	Adjustments which should be removed once the associated issue has been resolved.
	#############################################################################
	-->

	<!-- Textdomain is passed in dynamically which will not work correctly with gettext().
		 Ticket: https://github.com/Yoast/whip/issues/2 -->
	<rule ref="WordPress.WP.I18n.NonSingularStringLiteralDomain">
		<exclude-pattern>/src/messages/Whip_HostMessage\.php$</exclude-pattern>
		<exclude-pattern>/src/messages/Whip_UpgradePhpMessage\.php$</exclude-pattern>
	</rule>

	<rule ref="WordPress.NamingConventions.PrefixAllGlobals.DynamicHooknameFound">
		<!-- These hook setups should be reviewed.
			 Ticket: https://github.com/Yoast/whip/issues/67 -->
		<exclude-pattern>/src/Whip_Host\.php$</exclude-pattern>
	</rule>

</ruleset>
